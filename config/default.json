{
  "COMMON": {
    "log" : {
      "fileName" : "api-error-logs.log",
      "logsDirectory" : "logs"
    },
    "templates": {
      "templatesDirectory": "templates" 
    },
    "success": "Proceso ejecutado satisfactoriamente"
  },
  "BACKEND_PATH": {
    "handlers": "/backend/handlers",
    "services": "/backend/services"
  },
  "PATH": {
  	"app": "/app",
  	"model": "/app/model",
  	"store": "/app/store",
  	"service": "/app/service",
  	"view": "/app/view",
  	"controller": "/app/controller",
  	"context": "/app/context"
  },
  "WORKSPACE": {
  	"app": "sglm",
  	"model": "sglm.model",
  	"store": "sglm.store",
  	"service": "sglm.service",
  	"view": "sglm.view",
  	"controller": "sglm.controller",
  	"context": "sglm.context"
  },
  "CLASS_EXTJS": {
    "controller": "Deft.mvc.ViewController",
  	"model": "Ext.data.Model",
  	"panel": "Ext.panel.Panel",
    "form": "Ext.form.Panel"
  },
  "CLASS_ABSTRACT": {
    "controller": "sglm.controller.abstract.AbstractController",
    "gridController": "sglm.controller.abstract.AbstractGridController",
    "formController": "sglm.controller.abstract.AbstractFormController",
    "store": "sglm.store.abstract.AbstractStore",
    "context": "sglm.context.abstract.AbstractContext",
    "grid": "sglm.view.abstract.AbstractGrid",
    "form": "sglm.view.abstract.AbstractForm",
    "filterWindow": "sglm.view.abstract.AbstractFilterWindow"
  },
  "TOKEN": {
    "key": "appToken"
  },
  "PROXY_STORE": {
    "type": "rest",
    "reader": {
      "type": "json",
      "root": "rows",
      "totalProperty": "total",
      "successProperty": "success",
      "messageProperty": "msg"
    },
    "writer": {
      "type": "json",
      "writeAllFields": true,
      "allowSingle": false,
      "root": "data"
    },
    "sorters": {
      "direction": "DESC"
    }
  },
  "WIDTH": {
  	"panel": {
  		"region": {
  			"center": "60%",
  			"east": "40%",
  			"west": "20%"
  		}
  	}
  },
  "PARAMS": {
    "queryParam": "contains"
  },
  "FILE": {
    "application": "/app/Application.js",
    "appConfig": "/app/config/AppConfig.js",
    "routes": "/backend/routes.js",
    "server": "/backend/server.js"
  },
  "ANNOTATION": {
    "application": {
      "startInject": "@start inject",
      "endInject": "@end inject"
    },
    "appConfig": {
      "addEndpoint": "@add endpoints",
      "endEndpoint": "@end endpoints"
    },
    "routes": {
      "addRoutes": "@add routes",
      "endRoutes": "@end routes"
    },
    "server": {
      "startRequireHandler": "@start require handler",
      "endRequireHandler": "@end require handler",
      "addHandlers": "@add handlers",
      "endHandlers": "@end handlers"
    }
  }
}